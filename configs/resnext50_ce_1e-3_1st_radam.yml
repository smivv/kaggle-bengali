GLOBALS:
  image_key: &image_key "image"
  image_height: &image_height 137
  image_width: &image_width 236
#  image_height: &image_height 128
#  image_width: &image_width 128
  embedding_size: &embedding_size 256
  head_size: &head_size 512
  features_key: &features_key "features"
  embeddings_key: &embeddings_key "embeddings"
  grapheme_input_key: &grapheme_input_key "grapheme_root"
  grapheme_output_key: &grapheme_output_key "grapheme_root_pred"
  vowel_input_key: &vowel_input_key "vowel_diacritic"
  vowel_output_key: &vowel_output_key "vowel_diacritic_pred"
  consonant_input_key: &consonant_input_key "consonant_diacritic"
  consonant_output_key: &consonant_output_key "consonant_diacritic_pred"
  grapheme_num_classes: &grapheme_num_classes 168
  vowel_num_classes: &vowel_num_classes 11
  consonant_num_classes: &consonant_num_classes 7

  model_name: &model_name "se_resnext50_32x4d"
  logdir: &logdir "./logs/se_resnext50_32x4d_5e-3_radaml_onplateu_strat"
#  model_name: &model_name "efficientnet-b4"
#  logdir: &logdir "./logs/efficientnet-b4_radaml_onplateu_baseline"

  MAIN_METRIC: &MAIN_METRIC "_total_recall"

  train_size: 160672
  num_epochs: &num_epochs 200

  lr_top: &lr_top 0.005
  lr_start: &lr_start 0.005
  lr_end: &lr_end 0.001
  wd: &wd 0.0003

  w1: &w1 0.5
  w2: &w2 0.25
  w3: &w3 0.25

################################################################################

OPTIMIZERS:
  adam: &adam
    optimizer: Adam
    lr: *lr_start
    weight_decay: *wd

  adam_lookahead: &adam_lookahead
    optimizer: Lookahead
    base_optimizer_params:
      optimizer: RAdam
      lr: *lr_start
      weight_decay: *wd

  radam_lookahead: &radam_lookahead
    optimizer: Lookahead
    base_optimizer_params:
      optimizer: RAdam
      lr: *lr_start
      weight_decay: *wd

################################################################################

SCHEDULERS:
  exponential: &exponential
    scheduler: ExponentialLR
    gamma: 0.9

  cosine_warmup_restarts: &cosine_warmup_restarts
    scheduler: CosineAnnealingWarmUpRestarts
    T_0: 200
    T_mult: 2
    eta_max: 0.005
    eta_min: 0.0000001
    T_up: 0
    gamma: 0.5

  lr_on_plateu: &lr_on_plateu
    scheduler: ReduceLROnPlateau
    factor: 0.5
    patience: 5
    threshold: 0.00001

  multi_step_scheduler: &multi_step_scheduler
    scheduler: MultiStepLR
    milestones: [20, 40, 70]
    gamma: 0.5

#################################### MODEL #####################################

model_params:
  model: MultiHeadNet
  backbone_params:
    model_name: *model_name
    pretrained: True
    requires_grad: True
    in_channels: 1

#  neck_params:
#    hiddens: [*embedding_size]
#    layer_fn: {"module": "Linear", "bias": False}
#    norm_fn: BatchNorm1d
#    activation_fn: ReLU
#    dropout_fn: Dropout
#    residual: "soft"

  heads_params:
    *grapheme_output_key:
      hiddens: [
#        *head_size,
        *grapheme_num_classes
      ]
      layer_fn: [
        {"module": Linear, "bias": True},
#        {"module": Linear, "bias": True},
#        {"module": ArcFaceProduct},
      ]
#      norm_fn: [BatchNorm1d, null]
#      activation_fn: [ReLU, null]
#      dropout_fn: [{"module": "Dropout", p: 0.3}, null]

    *vowel_output_key:
      hiddens: [
#        *head_size,
        *vowel_num_classes
      ]
      layer_fn: [
        {"module": Linear, "bias": True},
#        {"module": Linear, "bias": True},
#        {"module": ArcFaceProduct},
      ]
#      norm_fn: [BatchNorm1d, null]
#      activation_fn: [ReLU, null]
#      dropout_fn: [{"module": "Dropout", p: 0.3}, null]

    *consonant_output_key:
      hiddens: [
#        *head_size,
        *consonant_num_classes
      ]
      layer_fn: [
        {"module": Linear, "bias": True},
#        {"module": Linear, "bias": True},
#        {"module": ArcFaceProduct},
      ]
#      norm_fn: [BatchNorm1d, null]
#      activation_fn: [ReLU, null]
#      dropout_fn: [{"module": "Dropout", p: 0.3}, null]

##################################### ARGS #####################################

args:
  expdir: "./src/"
  logdir: *logdir
  seed: 69 # KEYWORD, training seed for PyTorch, Numpy, Python and Tensorflow
  per_gpu_scaling: True
  deterministic: True  # KEYWORD, whether to use deterministic CuDNN (Default is True)
  benchmark: True  # KEYWORD, whether to use CuDNN benchmark
  verbose: True  # KEYWORD, whether to display learning information on the console (Default is False)
  check: False  # KEYWORD, if True, then Catalyst does only 3 epochs (to check the performance of the pipeline, by default False)

#runner_params:  # OPTIONAL KEYWORD, params for Runner's init
#  input_key: *image_key
#  output_key: None
#  output_key: [*grapheme_output_key, *vowel_output_key, *consonant_output_key]
#  input_target_key: [*grapheme_input_key, *vowel_input_key, *consonant_input_key]

#distributed_params:  # OPTIONAL KEYWORD, params for distributed training and NVIDIA Apex
#  rank: -1  # Rank for distributed training
#  opt_level: O1  # Example for NVIDIA Apex
#  syncbn: True  # KEYWORD, whether to convert BatchNorm to SyncBatchNorm (Default is False)
#  # This level may contain other parameters for the initialization of NVIDIA Apex

#################################### STAGES ####################################

stages:
  data_params:
    dataset_path: "/workspace/Datasets/BENGALI"
    target_to_use: [0, 1, 2]
    image_height: *image_height
    image_width: *image_width
    test_size: 0.1
    test_only: False
    use_original: True
    use_parquet: False
    files_to_load: null
    to_one_hot: False
#    stratification: "sklearn_random"
    stratification: "sklearn_stratified"

    batch_size: 200
    num_workers: 8

  criterion_params:
    _key_value: True
    ce:
      criterion: CrossEntropyLoss
#    de:
#      criterion: DenseCrossEntropy
#    fl:
#      criterion: FocalLossMultiClass
#    arc:
#      criterion: ArcFaceLoss

#    cen_grapheme_root:
#      criterion: CenterLoss
#      num_classes: *grapheme_num_classes
#      embedding_size: *embedding_size
#    cen_vowel_diacritic:
#      criterion: CenterLoss
#      num_classes: *vowel_num_classes
#      embedding_size: *embedding_size
#    cen_consonant_diacritic:
#      criterion: CenterLoss
#      num_classes: *consonant_num_classes
#      embedding_size: *embedding_size

  state_params:
    num_epochs: *num_epochs
    main_metric: *MAIN_METRIC
    minimize_metric: False

  # train head
#  stage1:
#    state_params:
#      num_epochs: 20
#    optimizer_params: *radam_lookahead
#    scheduler_params: *cosine_warmup_restarts

  # tune whole network
  stage2:
    state_params:
      num_epochs: *num_epochs
    optimizer_params: *radam_lookahead
    scheduler_params: *lr_on_plateu

#################################### CALLBACKS #################################

  callbacks_params:
    optimizer:
      callback: OptimizerCallback
    scheduler:
      callback: SchedulerCallback
      reduce_metric: *MAIN_METRIC
    saver:
      callback: CheckpointCallback

################################## CutmixCallback ##############################

#    grapheme_ce_criterion_callback:
#      callback: CutMixUpCallback
#      fields: [*image_key]
#      input_key: [*grapheme_input_key, *vowel_input_key, *consonant_input_key]
#      output_key: [*grapheme_output_key, *vowel_output_key, *consonant_output_key]
#      method: "both"
#      criterion_key: "ce"
#      prefix: &cutmix_ce_loss_prefix "loss_ce"
#      weights: [*w1, *w2, *w3]

################################ CriterionCallback #############################

    grapheme_ce_criterion_callback:
      callback: CriterionCallback
      input_key: *grapheme_input_key
      output_key: *grapheme_output_key
      criterion_key: "ce"
      prefix: &grapheme_ce_loss_prefix "loss_ce_grapheme_root"
    vowel_ce_criterion_callback:
      callback: CriterionCallback
      input_key: *vowel_input_key
      output_key: *vowel_output_key
      criterion_key: "ce"
      prefix: &vowel_ce_loss_prefix "loss_ce_vowel_diacritic"
    consonant_ce_criterion_callback:
      callback: CriterionCallback
      input_key: *consonant_input_key
      output_key: *consonant_output_key
      criterion_key: "ce"
      prefix: &consonant_ce_loss_prefix "loss_ce_consonant_diacritic"

#    grapheme_fl_criterion_callback:
#      callback: CriterionCallback
#      input_key: *grapheme_input_key
#      output_key: *grapheme_output_key
#      criterion_key: "fl"
#      prefix: &grapheme_fl_loss_prefix "loss_fl_grapheme_root"
#    vowel_fl_criterion_callback:
#      callback: CriterionCallback
#      input_key: *vowel_input_key
#      output_key: *vowel_output_key
#      criterion_key: "fl"
#      prefix: &vowel_fl_loss_prefix "loss_fl_vowel_diacritic"
#    consonant_fl_criterion_callback:
#      callback: CriterionCallback
#      input_key: *consonant_input_key
#      output_key: *consonant_output_key
#      criterion_key: "fl"
#      prefix: &consonant_fl_loss_prefix "loss_fl_consonant_diacritic"

#    grapheme_cen_criterion_callback:
#      callback: CriterionCallback
#      input_key: *grapheme_input_key
#      output_key: *embeddings_key
#      criterion_key: "cen_grapheme_root"
#      prefix: &grapheme_cen_loss_prefix "loss_cen_grapheme_root"
#    vowel_cen_criterion_callback:
#      callback: CriterionCallback
#      input_key: *vowel_input_key
#      output_key: *embeddings_key
#      criterion_key: "cen_vowel_diacritic"
#      prefix: &vowel_cen_loss_prefix "loss_cen_vowel_diacritic"
#    consonant_cen_criterion_callback:
#      callback: CriterionCallback
#      input_key: *consonant_input_key
#      output_key: *embeddings_key
#      criterion_key: "cen_consonant_diacritic"
#      prefix: &consonant_cen_loss_prefix "loss_cen_consonant_diacritic"

#    grapheme_arc_criterion_callback:
#      callback: CriterionCallback
#      input_key: *grapheme_input_key
#      output_key: *grapheme_output_key
#      criterion_key: "arc"
#      prefix: &grapheme_arc_loss_prefix "loss_arc_grapheme_root"
#    vowel_arc_criterion_callback:
#      callback: CriterionCallback
#      input_key: *vowel_input_key
#      output_key: *vowel_output_key
#      criterion_key: "arc"
#      prefix: &vowel_arc_loss_prefix "loss_arc_vowel_diacritic"
#    consonant_arc_criterion_callback:
#      callback: CriterionCallback
#      input_key: *consonant_input_key
#      output_key: *consonant_output_key
#      criterion_key: "arc"
#      prefix: &consonant_arc_loss_prefix "loss_arc_consonant_diacritic"

    loss_aggregator_callback:
      callback: CriterionAggregatorCallback
      prefix: "loss"
      loss_aggregate_fn: "weighted_sum"
      loss_keys: {
#        *cutmix_ce_loss_prefix: 1.0
        *grapheme_ce_loss_prefix: *w1, *vowel_ce_loss_prefix: *w2, *consonant_ce_loss_prefix: *w3,
#        *grapheme_cen_loss_prefix: 0.5, *vowel_cen_loss_prefix: 0.25, *consonant_cen_loss_prefix: 0.25,
#        *grapheme_fl_loss_prefix: 0.5, *vowel_fl_loss_prefix: 0.25, *consonant_fl_loss_prefix: 0.25,
#        *grapheme_arc_loss_prefix: 0.05 , *vowel_arc_loss_prefix: 0.025, *consonant_arc_loss_prefix: 0.025
      }

    grapheme_accuracy_callback:
      callback: AccuracyCallback
      input_key: *grapheme_input_key
      output_key: *grapheme_output_key
      num_classes: *grapheme_num_classes
      prefix: &grapheme_acc_prefix "acc_grapheme"
      accuracy_args: [1]
    vowel_accuracy_callback:
      callback: AccuracyCallback
      input_key: *vowel_input_key
      output_key: *vowel_output_key
      num_classes: *vowel_num_classes
      prefix: &vowel_acc_prefix "acc_vowel"
      accuracy_args: [1]
    consonant_accuracy_callback:
      callback: AccuracyCallback
      input_key: *consonant_input_key
      output_key: *consonant_output_key
      num_classes: *consonant_num_classes
      prefix: &consonant_acc_prefix "acc_consonant"
      accuracy_args: [1]

    metrics_aggregator_callback:
      callback: MetricAggregatorCallback
      prefix: "_total_accuracy"
      metric_aggregate_fn: "weighted_sum"
      metric_keys: {"acc_grapheme01": *w1, "acc_vowel01": *w2, "acc_consonant01": *w3}

    recall_callback:
      callback: RecallCallback
      input_keys: [*grapheme_input_key, *vowel_input_key, *consonant_input_key]
      output_keys: [*grapheme_output_key, *vowel_output_key, *consonant_output_key]
      loss_keys: ["recall_grapheme01", "recall_vowel01", "recall_consonant01"]
      weights: [*w1, *w2, *w3]
      prefix: *MAIN_METRIC

    visualization_callback:
      callback: VisualizationCallback
      input_keys: [*image_key]
      concat_images: True
      denorm: "bengali"

    telegram_callback:
      callback: TelegramLogger
      chat_id: 131088733
      token: 1084707165:AAEK5aqWNJ6ov7LQP4xXWBHB5dJ3LB0rmdY
      metric_names: ["recall_grapheme01", "recall_vowel01", "recall_consonant01",
                     "acc_grapheme01", "acc_vowel01", "acc_consonant01",
                     "_base/lr", "_timers/fps", "_timers/batch_time",
                     "_timers/data_time", "_timers/model_time",
                     "_total_accuracy", "_total_recall", ]