globs:
  features_key: &features_key "features"
  embeddings_key: &embeddings_key "embeddings"
  grapheme_input_key: &grapheme_input_key "grapheme_root"
  grapheme_output_key: &grapheme_output_key "grapheme_root_pred"
  vowel_input_key: &vowel_input_key "vowel_diacritic"
  vowel_output_key: &vowel_output_key "vowel_diacritic_pred"
  consonant_input_key: &consonant_input_key "consonant_diacritic"
  consonant_output_key: &consonant_output_key "consonant_diacritic_pred"
  grapheme_num_classes: &grapheme_num_classes 168
  vowel_num_classes: &vowel_num_classes 11
  consonant_num_classes: &consonant_num_classes 7
  embedding_size: &embedding_size 256
  lr1: &lr1 0.0001
  lr2: &lr2 0.00001
  wd: &wd 0.0003
  w1: &w1 0.5
  w2: &w2 0.25
  w3: &w3 0.25

  lr_on_plateu: &lr_on_plateu_scheduler
    scheduler: ReduceLROnPlateau
    factor: 0.5
    patience: 3

  multi_step_scheduler: &multi_step_scheduler
    scheduler: MultiStepLR
    milestones: [10, 40, 70]
    gamma: 0.5

model_params:
  model: MultiHeadNet
  backbone_params:
    model_name: efficientnet-b4
    pretrained: True
    requires_grad: True
    in_channels: 1

#  neck_params:
#    hiddens: [512]
#    layer_fn: {"module": "Linear", "bias": False}
#    norm_fn: BatchNorm1d
#    activation_fn: ReLU
#    dropout_fn: Dropout
#    residual: "soft"

  heads_params:
    grapheme_root_pred:
      hiddens: [
#        *embedding_size,
        *grapheme_num_classes
      ]
      layer_fn: [
        {"module": Linear, "bias": False},
#        {"module": ArcFaceProduct}
      ]
    vowel_diacritic_pred:
      hiddens: [
#        *embedding_size,
        *vowel_num_classes
      ]
      layer_fn: [
        {"module": Linear, "bias": False},
#        {"module": ArcFaceProduct}
      ]
    consonant_diacritic_pred:
      hiddens: [
#        *embedding_size,
        *consonant_num_classes
      ]
      layer_fn: [
        {"module": Linear, "bias": False},
#        {"module": ArcFaceProduct}
      ]

args:
  expdir: "./src/"
  logdir: "./logs/efficientnet"

  seed: 69
  verbose: True
  per_gpu_scaling: True

stages:
  data_params:
    dataset_path: "/workspace/Datasets/BENGALI"
    target_to_use: [0, 1, 2]
    image_size: 224
    test_size: 0.2
    test_only: False
    use_parquet: False
    files_to_load: None
#    to_one_hot: True
    to_one_hot: False

    batch_size: 32
    num_workers: 0

  criterion_params:
    _key_value: True
    ce:
      criterion: CrossEntropyLoss
#    de:
#      criterion: DenseCrossEntropy
    fl:
      criterion: FocalLossMultiClass
#    arc:
#      criterion: ArcFaceLoss

#    cen_grapheme_root:
#      criterion: CenterLoss
#      num_classes: *grapheme_num_classes
#      embedding_size: *embedding_size
#    cen_vowel_diacritic:
#      criterion: CenterLoss
#      num_classes: *vowel_num_classes
#      embedding_size: *embedding_size
#    cen_consonant_diacritic:
#      criterion: CenterLoss
#      num_classes: *consonant_num_classes
#      embedding_size: *embedding_size

  state_params:
    num_epochs: 80
    main_metric: &MAIN_METRIC "_total_accuracy"
    minimize_metric: False

#  scheduler_params:
#    scheduler: MultiStepLR
#    milestones: [20]
#    gamma: 0.5

  # train head
  stage1:
    state_params:
      num_epochs: 40

    optimizer_params:
      optimizer: Lookahead
      base_optimizer_params:
        optimizer: RAdam
        lr: *lr1
        weight_decay: *wd

    scheduler_params: *lr_on_plateu_scheduler

  # tune whole network
  stage2:
    state_params:
      num_epochs: 40

    optimizer_params:
      optimizer: Lookahead
      base_optimizer_params:
        optimizer: RAdam
        lr: *lr2
        weight_decay: *wd

    scheduler_params: *lr_on_plateu_scheduler

##############################################################################

  callbacks_params:
    optimizer:
      callback: OptimizerCallback
    scheduler:
      callback: SchedulerCallback
      reduce_metric: *MAIN_METRIC
    saver:
      callback: CheckpointCallback

    grapheme_ce_criterion_callback:
      callback: CriterionCallback
      input_key: *grapheme_input_key
      output_key: *grapheme_output_key
      criterion_key: "ce"
      prefix: &grapheme_ce_loss_prefix "loss_ce_grapheme_root"
    vowel_ce_criterion_callback:
      callback: CriterionCallback
      input_key: *vowel_input_key
      output_key: *vowel_output_key
      criterion_key: "ce"
      prefix: &vowel_ce_loss_prefix "loss_ce_vowel_diacritic"
    consonant_ce_criterion_callback:
      callback: CriterionCallback
      input_key: *consonant_input_key
      output_key: *consonant_output_key
      criterion_key: "ce"
      prefix: &consonant_ce_loss_prefix "loss_ce_consonant_diacritic"

    grapheme_fl_criterion_callback:
      callback: CriterionCallback
      input_key: *grapheme_input_key
      output_key: *grapheme_output_key
      criterion_key: "fl"
      prefix: &grapheme_fl_loss_prefix "loss_fl_grapheme_root"
    vowel_fl_criterion_callback:
      callback: CriterionCallback
      input_key: *vowel_input_key
      output_key: *vowel_output_key
      criterion_key: "fl"
      prefix: &vowel_fl_loss_prefix "loss_fl_vowel_diacritic"
    consonant_fl_criterion_callback:
      callback: CriterionCallback
      input_key: *consonant_input_key
      output_key: *consonant_output_key
      criterion_key: "fl"
      prefix: &consonant_fl_loss_prefix "loss_fl_consonant_diacritic"

#    grapheme_cen_criterion_callback:
#      callback: CriterionCallback
#      input_key: *grapheme_input_key
#      output_key: *embeddings_key
#      criterion_key: "cen_grapheme_root"
#      prefix: &grapheme_cen_loss_prefix "loss_cen_grapheme_root"
#    vowel_cen_criterion_callback:
#      callback: CriterionCallback
#      input_key: *vowel_input_key
#      output_key: *embeddings_key
#      criterion_key: "cen_vowel_diacritic"
#      prefix: &vowel_cen_loss_prefix "loss_cen_vowel_diacritic"
#    consonant_cen_criterion_callback:
#      callback: CriterionCallback
#      input_key: *consonant_input_key
#      output_key: *embeddings_key
#      criterion_key: "cen_consonant_diacritic"
#      prefix: &consonant_cen_loss_prefix "loss_cen_consonant_diacritic"

#    grapheme_arc_criterion_callback:
#      callback: CriterionCallback
#      input_key: *grapheme_input_key
#      output_key: *grapheme_output_key
#      criterion_key: "arc"
#      prefix: &grapheme_arc_loss_prefix "loss_arc_grapheme_root"
#    vowel_arc_criterion_callback:
#      callback: CriterionCallback
#      input_key: *vowel_input_key
#      output_key: *vowel_output_key
#      criterion_key: "arc"
#      prefix: &vowel_arc_loss_prefix "loss_arc_vowel_diacritic"
#    consonant_arc_criterion_callback:
#      callback: CriterionCallback
#      input_key: *consonant_input_key
#      output_key: *consonant_output_key
#      criterion_key: "arc"
#      prefix: &consonant_arc_loss_prefix "loss_arc_consonant_diacritic"

    loss_aggregator_callback:
      callback: CriterionAggregatorCallback
      prefix: "loss"
      loss_aggregate_fn: "weighted_sum"
      loss_keys: {
        *grapheme_ce_loss_prefix: 0.5, *vowel_ce_loss_prefix: 0.25, *consonant_ce_loss_prefix: 0.25,
        *grapheme_fl_loss_prefix: 0.5, *vowel_fl_loss_prefix: 0.25, *consonant_fl_loss_prefix: 0.25,
#        *grapheme_cen_loss_prefix: 0.5, *vowel_cen_loss_prefix: 0.25, *consonant_cen_loss_prefix: 0.25,
#        *grapheme_arc_loss_prefix: 0.05 , *vowel_arc_loss_prefix: 0.025, *consonant_arc_loss_prefix: 0.025
      }

    grapheme_accuracy_callback:
      callback: AccuracyCallback
      input_key: *grapheme_input_key
      output_key: *grapheme_output_key
      num_classes: *grapheme_num_classes
      prefix: &grapheme_acc_prefix "acc_grapheme"
      accuracy_args: [1]
    vowel_accuracy_callback:
      callback: AccuracyCallback
      input_key: *vowel_input_key
      output_key: *vowel_output_key
      num_classes: *vowel_num_classes
      prefix: &vowel_acc_prefix "acc_vowel"
      accuracy_args: [1]
    consonant_accuracy_callback:
      callback: AccuracyCallback
      input_key: *consonant_input_key
      output_key: *consonant_output_key
      num_classes: *consonant_num_classes
      prefix: &consonant_acc_prefix "acc_consonant"
      accuracy_args: [1]

    metrics_aggregator_callback:
      callback: MetricAggregatorCallback
      prefix: *MAIN_METRIC
      metric_aggregate_fn: "weighted_sum"
      metric_keys: {"acc_grapheme01": *w1, "acc_vowel01": *w2, "acc_consonant01": *w3}

    visualization_callback:
      callback: VisualizationCallback
      input_keys: ["image"]
      concat_images: False

#    tensorboard_callback:
#      callback: TensorboardLogger
#      metric_names: ["_base/lr", "_base/momentum"]